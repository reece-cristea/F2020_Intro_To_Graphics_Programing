const int kernalSamples = 25,
          detail = 1,         
          tileSize = 1 << detail;
const float sigma = float(kernalSamples) * .25;

float gaussian(vec2 i) 
{
    return exp( -.5* dot(i/=sigma,i) ) / ( 6.28 * sigma*sigma );
}

vec4 blur(sampler2D sp, vec2 U, vec2 scale) {
    vec4 O = vec4(0);  
    int s = kernalSamples/tileSize;
    
    for (int i = 0; i < s*s; i++)
    {
        vec2 d = vec2(i%s, i/s)*float(tileSize) - float(kernalSamples)/2.;
        O += gaussian(d) * textureLod( sp, U + scale * d , float(detail) );
    }
    
    return O / O.a;
}


void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec4 blur = blur(iChannel0, fragCoord.xy/iChannelResolution[0].xy, 1.0/iChannelResolution[0].xy);
    
    fragColor = blur;
}